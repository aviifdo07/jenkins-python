pipeline {
    agent any
    
    stages {
        stage('Build') {
            steps {
                script {
                    // Example using Maven for building
                    sh 'mvn clean package'
                }
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                script {
                    // Example running unit tests with JUnit
                    sh 'mvn test'
                    
                    // Example running integration tests with Selenium
                    sh 'python selenium_tests.py'
                }
            }
        }
        
        stage('Code Analysis') {
            steps {
                script {
                    // Example using SonarQube for code analysis
                    withSonarQubeEnv('SonarQubeServer') {
                        sh 'mvn sonar:sonar'
                    }
                }
            }
        }
        
        stage('Security Scan') {
            steps {
                script {
                    // Example using OWASP ZAP for security scanning
                    sh 'zap-cli --url http://yourappurl.com --quick-scan'
                }
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                script {
                    // Example deploying to AWS EC2 instance
                    sh 'aws s3 cp yourapp.jar s3://your-bucket-name'
                    sh 'aws ec2 run-instances ...'
                }
            }
        }
        
        stage('Integration Tests on Staging') {
            steps {
                script {
                    // Example running integration tests on staging
                    sh 'python integration_tests_staging.py'
                }
            }
        }
        
        stage('Deploy to Production') {
            steps {
                script {
                    // Example deploying to production AWS EC2 instance
                    sh 'aws s3 cp yourapp.jar s3://your-bucket-name'
                    sh 'aws ec2 run-instances ...'
                }
            }
        }
    }
    
    post {
        success {
            emailext subject: "Pipeline Successful",
                body: "Your Jenkins pipeline has completed successfully.",
                to: "your.email@example.com"
        }
        failure {
            emailext subject: "Pipeline Failed",
                body: "Your Jenkins pipeline has failed. Please check the logs for details.",
                to: "your.email@example.com"
        }
    }
}
